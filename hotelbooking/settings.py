"""
Django settings for hotelbooking project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import dj_database_url

import pymysql
pymysql.install_as_MySQLdb()

from pathlib import Path
import os

DATABASE_URL = os.getenv('DATABASE_URL')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = BASE_DIR / 'templates'
 
# SECRET_KEY = config('SECRET_KEY')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#+)fxqdjxv)j-4pl8nmar)00uisw2=_9a8sl(q$w*ed=-@ycy0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['hotel-management-w2xo.onrender.com', 'www.hotel-management-w2xo.onrender.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hotelapp',
    'django_extensions',
    'hotel',
    'subscription',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'hotel.middleware.CompanyNameMiddleware',
    'hotelapp.middleware.DateTimeJSONMiddleware',
    'hotelapp.middleware.SuperuserPermissionMiddleware',
    'subscription.middleware.SubscriptionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',


]

ROOT_URLCONF = 'hotelbooking.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'hotelapp.context_processors.get_active_subscription',
                "hotelapp.context_processors.dynamic_logos",
                'subscription.context_processors.guest_context',  # âœ… Add this line

            ],
        },
    },
]

WSGI_APPLICATION = 'hotelbooking.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# if DATABASE_URL:
#     DATABASES = {
#         'default': dj_database_url.config(
#             default=DATABASE_URL,
#             conn_max_age=600,
#             ssl_require=True
#         )
#     }
# else:
#     # fallback to local MySQL for development
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': 'hotelbloom',
#             'USER': 'root',
#             'PASSWORD': '1234',
#             'HOST': 'localhost',
#             'PORT': '3306',
#         }
#     }

# DATABASES = {
#     'default': dj_database_url.parse(
#         DATABASE_URL,
#         conn_max_age=600,
#         ssl_require=True
#     ) if DATABASE_URL else {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'hotelbloom',
#         'USER': 'root',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }

# mysql://root:DxEBtDQjPNqpgfVCupvCndydvfsUOAXz@shortline.proxy.rlwy.net:34847/railway
DATABASES = {
    'default': dj_database_url.config(default='mysql://root:DxEBtDQjPNqpgfVCupvCndydvfsUOAXz@shortline.proxy.rlwy.net:34847/railway')
}

print("DATABASE_URL =>", DATABASE_URL)


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Adjust this path as necessary

STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'hotelapp.CustomUser'

# Set session expiry to 5 minutes (300 seconds)
# SESSION_COOKIE_AGE = 300  # 5 minutes
# SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Optional: expire session when the browser is closed

LOGIN_URL = 'admin-panel:login'
LOGIN_REDIRECT_URL = 'admin-panel:index'
LOGOUT_REDIRECT_URL = 'admin-panel:login'

# Session settings
SESSION_COOKIE_AGE = 3600  # 1 hour in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = True 
HANDLER403 = 'hotelapp.views.custom_403_view'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Use your SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'shivamani7907@gmail.com'  # Replace with your email
EMAIL_HOST_PASSWORD = 'tgtl tcnn nkdb oibc'  # Replace with your email password

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
]

RAZORPAY_KEY_ID = 'rzp_test_Bvq9kiuaq8gkcs'
RAZORPAY_KEY_SECRET = 'qnN6ytUKNw6beVzQUw7OBiJM'

SITE_URL = 'hotel-management-w2xo.onrender.com'  # Change this to your domain


DEFAULT_LOGO_URL = '/static//hotel/assets/img/logo/logo.png'
DEFAULT_FROM_EMAIL = 'shivamani7907@gmail.com'

